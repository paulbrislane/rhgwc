/* Color customization */
:root {
  --primary: #f9c412;
  --primary-dark: #E7BF60;
}

.test-dead-code-elimination-sentinel {
  color: red;
}

/*
  Make image rasterization lazy. This means that e.g. the cost of the
  blurry placeholder is never paid if images load before entering
  the viewport.
  Context
  - https://web.dev/content-visibility/#skipping-rendering-work-with-content-visibility
 */
main img {
  content-visibility: auto;
}

/* "Content-visibility: auto" move the images over the other elements
   Set z-index to keep the nav over the rasterized images */
header nav {
  position: relative;
  z-index: 1;
}

/*! purgecss start ignore */
:root {
  --main-width: calc(100vw - 3em);
}

@media (min-width: 37.5em) {
  :root {
    --main-width: calc(37.5em - 3em);
  }
}
/*! purgecss end ignore */

#nav {
  z-index: 2;
  position: relative;
}


/* My Styling */
:root {
  --border-radius: 16px;
  --container-width: 1540px;
  --container-width-narrow: calc(var(--container-width) / 2);
  --container: calc((100vw - var(--container-width)) / 2);
  --container-narrow: calc((100vw - var(--container-width-narrow)) / 2);
  --header-height: 90px;

  --black: #000;
  --white: #fff;
  --title-fill: #1a1a22;
}

html{
  -webkit-text-size-adjust:100%;
  box-sizing: border-box;
  font-family: 'Inter UI', sans-serif;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  background-color: var(--black);
  font-family: 'Inter', sans-serif;
  margin: 0;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.container {
  padding: 0 var(--container);
}

@media (max-width: 1500px) {
  .container {
    margin: 0 20px;
  }
}

nav,
section {
  padding: 0 max(20px, 50vw - var(--container-width) / 2);
}

nav {
  height: clamp(calc(var(--header-height) / 2), 12vw, var(--header-height));
  margin-bottom: min(14vw, 180px);
  display: flex;
  align-items: flex-end;
  flex: 1;
  justify-content: space-between;
}

nav a {
  font-family: 'Syncopate';
  color:var(--white);
  text-transform: uppercase;
  font-size: clamp(14px, 3vw, 16px);
  letter-spacing: 0.15em;
  line-height: 1;
  text-decoration: none;
  font-weight: bold;
}

main {
  flex: 1;
  margin: min(12vw, var(--header-height)) 0;
}

article {
  color: var(--white);
  padding: 0 var(--container-narrow);
  margin: 0 20px;
}

p {
  line-height: 1.8;
  font-size: clamp(16px, 2.5vw, 20px);
  margin: 0 0 1em;
}

img {
  max-width: 100%;
  height: auto;
}

img,
picture,
svg {
  display: block;
}

article img {
  border-radius: calc(var(--border-radius) / 2);
  margin: 0 auto clamp(3rem,12vw, 5rem);
}

article p {
  margin-bottom: clamp(3rem,12vw, 5rem);
}

h1 {
  color: var(--white);
  font-size: 64px;
  font-size: clamp(34px, 8vw, 64px);
}

header h1 {
  margin: 0 0 clamp(calc(var(--header-height) / 2), 12vw, var(--header-height));
  padding: 0 max(20px, 50vw - var(--container-width) / 2);
  text-align: center;
}

.title {
  font-family: 'Syncopate';
  font-weight: bold;
  text-transform: uppercase;
}

.title__fill {
  fill: var(--title-fill);
}

.title__grid {
  display: grid;
  color: var(--white);
}

.title h1 {
  text-align: left;
  font-size: clamp(34px, 9vw, 60px);
  line-height: 1.1;
  margin: 0 0 0 -5px;
}

.title p {
  font-size: clamp(12px, 3vw, 14px);
  margin: 1em 0 1.5em;
}

@media (max-width: 767px) {
  .title {
    display: flex;
    flex-direction: column-reverse;
  }

  .title h1 {
    padding: 0;
  }
}

@media (min-width: 768px) {
  .title__grid {
    align-items: flex-end;
    grid-template-columns: repeat(2, 1fr);
    margin-top: -1.5vmax;
  }

  .title h1 {
    font-size: clamp(38px, 4vw, 60px);
  }

  .title p {
    text-align: right;
    font-size: clamp(12px, 1vw, 14px);
    margin: 0 0 3px;
  }
}

#posts {
  margin: min(12vw, var(--header-height)) 0;
}

#posts h2 {
  font-family: 'Syncopate';
  font-size: clamp(18px, 2vw, 24px);
  text-transform: uppercase;
  font-style: normal;
}

.post-list {
  padding: 10px 0;
  margin: -10px 0;
  list-style: none;
  display: grid;
  grid-gap: 20px;
  grid-template-columns:
    0
    repeat(var(--post-total), clamp(280px, 74vw, 350px))
    1px;
  overflow-x: auto;
  width: 100vw;

  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

.post-list::before,
.post-list::after {
  content: '';
}

.post-list::-webkit-scrollbar {
  display: none;
}

@media(min-width:768px) {
  .post-list {
    grid-gap: 32px;
    grid-template-columns:
      0
      repeat(var(--post-total), clamp(350px, 45vw, 450px))
      1px;
  }
}

.post-list__item {
  display: flex;
  height: 400px;
}


@media(max-width:767px) {
  .post-list {
    scroll-snap-type: x proximity;
  }

  .post-list__item {
    height: 340px;
    scroll-snap-align: start center;
  }
}

.post__featured-image {
  border-radius: calc(var(--border-radius) / 2);
}

@media (min-width: 768px) {
  .post__featured-image {
    border-radius: var(--border-radius);
  }
}

.card {
  background-color: #e1e1e1;
  border-radius: 8px;
  display: flex;
  flex: 1;
  flex-direction: column;
  overflow: hidden;
  transition: 0.2s;
  backface-visibility: hidden;
  transform-origin: center center;
  text-decoration: none;
}

.card:hover {
  transform: scale(1.02);
}

.card__body {
  padding: 1em;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.card__title {
  color: #202020;
  font-size: 48px;
  line-height: 1.4;
  margin: 0;
}

.card__description {
  color: #202020;
  font-size: 18px;
  margin: 0;
}

.card__time {
  color: #595959;
}

footer {
  text-align: center;
  margin-bottom: min(12vw, var(--header-height));
}

.twitter {
  display: inline-block;
}

.twitter:hover {
  animation: jello-vertical 0.9s both;
}

.twitter__svg {
  height: 48px;
}

@keyframes jello-vertical {
  0% {
    transform: scale3d(1, 1, 1);
  }
  30% {
    transform: scale3d(0.75, 1.25, 1);
  }
  40% {
    transform: scale3d(1.25, 0.75, 1);
  }
  50% {
    transform: scale3d(0.85, 1.15, 1);
  }
  65% {
    transform: scale3d(1.05, 0.95, 1);
  }
  75% {
    transform: scale3d(0.95, 1.05, 1);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}

button {
  background: none;
  border: 0;
  cursor: pointer;
  padding: 0;
  width: 38px;
  height: 32px;
}

button:focus:not(:focus-visible) {
  outline: 0;
}

dialog[open] {
  background-color: rgba(0, 0, 0, 0.925);
  display: grid;
  height: 100%;
  place-content: center;
  position: fixed;
  width: 100%;
  display: grid;
}
